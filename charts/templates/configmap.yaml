apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ include "esap.fullname" . }}-settings"
  labels:
    {{- include "esap.labels" . | nindent 4 }}
data:
  prod.py: |
    """
    Django settings for esap project for development
    """
    from esap.settings.base import *
    import os

    # Build paths inside the project like this: os.path.join(BASE_DIR, ...)
    BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

    # SECURITY WARNING: don't run with debug turned on in production!
    DEBUG = os.environ.get('DEBUG', "false") == "yes"
    IS_DEV = os.environ.get('IS_DEV', "false") == "yes"
    # USE_DOP457 = False

    ALLOWED_HOSTS = ['*']
    CORS_ORIGIN_ALLOW_ALL = True
    CORS_ALLOW_CREDENTIALS = True

    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

    # Database
    DATABASE_ROUTERS = [
        'query.database_router.QueryRouter',
        'accounts.database_router.AccountsRouter',
        'ida.database_router.IdaRouter',
        'batch.database_router.BatchRouter',
        'rucio.database_router.RucioRouter',
    ]

    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'esap_config.sqlite3'),
        },
        'accounts': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'esap_accounts_config.sqlite3'),
        },
        'ida': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'esap_ida_config.sqlite3'),
        },
        'batch': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'esap_batch_config.sqlite3'),
        },
        'rucio': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'esap_rucio_config.sqlite3'),
        },

    }

    # Password validation
    # https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

    AUTH_PASSWORD_VALIDATORS = []


    # Setup support for proxy headers,
    # this should only be used if an nginx proxy is used that forwards the headers
    # https://www.nginx.com/resources/wiki/start/topics/examples/forwarded/
    # https://docs.djangoproject.com/en/3.2/ref/settings/#use-x-forwarded-host
    USE_X_FORWARDED_HOST = True
    #SECURE_SSL_REDIRECT = True

    # SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

    # Settings for mozilla_django_oidc
    # use 'mozilla_django_oidc' authentication backend
    AUTHENTICATION_BACKENDS = (
        'django.contrib.auth.backends.ModelBackend',
        #'mozilla_django_oidc.auth.OIDCAuthenticationBackend',
        'accounts.my_oidc.MyOIDCAB'
    )
    OIDC_DRF_AUTH_BACKEND = 'mozilla_django_oidc.auth.OIDCAuthenticationBackend'

    # OIDC environment variables

    try:
        OIDC_RP_CLIENT_ID = os.environ['OIDC_RP_CLIENT_ID']
        OIDC_RP_CLIENT_SECRET = os.environ['OIDC_RP_CLIENT_SECRET']
        OIDC_OP_JWKS_ENDPOINT = os.environ['OIDC_OP_JWKS_ENDPOINT']
        OIDC_OP_AUTHORIZATION_ENDPOINT = os.environ['OIDC_OP_AUTHORIZATION_ENDPOINT']
        OIDC_OP_TOKEN_ENDPOINT = os.environ['OIDC_OP_TOKEN_ENDPOINT']
        OIDC_OP_USER_ENDPOINT = os.environ['OIDC_OP_USER_ENDPOINT']
        OIDC_AUTHENTICATION_CALLBACK_URL = os.environ['OIDC_AUTHENTICATION_CALLBACK_URL']
        #"https://sdc-dev.astron.nl/esap/oidc/callback/"

        LOGIN_REDIRECT_URL = os.environ['LOGIN_REDIRECT_URL']
        LOGOUT_REDIRECT_URL = os.environ['LOGOUT_REDIRECT_URL']
        LOGIN_REDIRECT_URL_FAILURE = os.environ['LOGIN_REDIRECT_URL_FAILURE']
        # raise
    except Exception as e: 
        if os.environ.get("ESAP_ENABLE_ANONYMOUS_MODE", "no") == "yes":
            print("OIDC settings are not configured. ESAP will work in anonymous mode")
        else:
            raise

    OIDC_AUTH_REQUEST_EXTRA_PARAMS = {'audience':'rucio'}
    OIDC_RP_SCOPES = "openid email profile"
    OIDC_RP_SIGN_ALGO = "RS256"
    OIDC_STORE_ACCESS_TOKEN = True
    OIDC_STORE_ID_TOKEN = True

    OIDC_RENEW_ID_TOKEN_EXPIRY_SECONDS = float(os.getenv('OIDC_RENEW_ID_TOKEN_EXPIRY_SECONDS', 36000))
      
    # SECURITY WARNING: keep the secret key used in production secret!
    # preferably read the SECRET_KEY from the environment
    SECRET_KEY = os.environ['SECRET_KEY']

    RUCIO_HOST = os.getenv('RUCIO_HOST', None)

    # Static files (CSS, JavaScript, Images)
    # https://docs.djangoproject.com/en/2.0/howto/static-files/

    STATIC_URL = '/static/'
    STATIC_ROOT = os.path.join(BASE_DIR, 'static')

    # configuration settings that can be requested through the REST API
    API_VERSION = "esap version 12 aug 2021"
    CONFIGURATION_DIR = os.path.join(BASE_DIR, 'configuration')
    CONFIGURATION_FILE = 'esap_default'

    # location of the YAML configuration files.
    # currently next to the (default) 'sqlite3' files, but can be moved later.
    CONFIGURATION_DATA_DIR = os.path.join(BASE_DIR)

    # Customizing type of auto-created primary keys
    # New in Django 3.2: https://docs.djangoproject.com/en/3.2/releases/3.2/#customizing-type-of-auto-created-primary-keys
    DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'
